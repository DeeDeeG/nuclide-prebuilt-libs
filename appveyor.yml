image: Visual Studio 2015

environment:
  matrix:
    - nodejs_version: "7"
    - nodejs_version: "7.4"
      ELECTRON: "1.6.5"
    - nodejs_version: "7.4"
      ELECTRON: "1.7.0"

matrix:
  fast_finish: true

platform:
  - x64

configuration:
  - Release

install:
  - ps: |
      Install-Product node $env:nodejs_version x64
      if ($env:ELECTRON) {
        $env:npm_config_target=$env:ELECTRON
        $env:npm_config_disturl="https://atom.io/download/electron"
        $env:npm_config_runtime="electron"
        $env:npm_config_build_from_source="true"
      }
  - ps: |
      Push-Location ctags
      npm install
      npm run build
      Pop-Location
  - ps: |
      Push-Location fuzzy-native
      npm install
      npm run build
      Pop-Location
  - ps: |
      Push-Location keytar
      npm install
      npm run build
      Pop-Location
  - ps: |
      Push-Location pty
      npm install
      npm run tsc
      npm run build
      Pop-Location

test_script:
  - ps: |
      Push-Location ctags
      if (!$env:ELECTRON) { npm test }
      node_modules/.bin/node-pre-gyp package testpackage
      Pop-Location
  - ps: |
      Push-Location fuzzy-native
      if (!$env:ELECTRON) { npm test }
      node_modules/.bin/node-pre-gyp package testpackage
      Pop-Location
  - ps: |
      Push-Location keytar
      if (!$env:ELECTRON) { npm test }
      node_modules/.bin/node-pre-gyp package testpackage
      Pop-Location
  - ps: |
      Push-Location pty
      if (!$env:ELECTRON) { npm test }
      node_modules/.bin/node-pre-gyp package testpackage
      Pop-Location

build: off

artifacts:
  - path: '**\build\stage\*.tar.gz'

deploy:
  description: $(appveyor_repo_tag_name)
  provider: GitHub
  auth_token:
    secure: rdBc+YLCOY3cFD38CjEn4Z/b6uvCBFiwHAiLg5Lwzs2WoPS0uLTgrW2puQSV5oZp
  artifact: /.*\.tar\.gz/
  force_update: true
  on:
    appveyor_repo_tag: true
